{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/DATOS/Escritorio/APPs/TERMINADO/app-ReactNative-NavigationyLogin--MED/Screens/LoginScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport * as Google from 'expo-google-app-auth';\n\nvar LoginScreen = function (_Component) {\n  _inherits(LoginScreen, _Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen() {\n    _classCallCheck(this, LoginScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"_signInWithGoogle\",\n    value: function _signInWithGoogle() {\n      var result;\n      return _regeneratorRuntime.async(function _signInWithGoogle$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Google.logInAsync({\n                androidClientId: \"95338186220-pd2rvqfke9ubgevvm3bb8s8jfe89jp4d.apps.googleusercontent.com\",\n                scopes: ['profile', 'email']\n              }));\n\n            case 3:\n              result = _context.sent;\n\n              if (!(result.type === 'success')) {\n                _context.next = 8;\n                break;\n              }\n\n              try {\n                this.props.onLogin();\n              } catch (error) {\n                console.log(\"Something happened \" + error);\n              }\n\n              _context.next = 9;\n              break;\n\n            case 8:\n              return _context.abrupt(\"return\", {\n                cancelled: true\n              });\n\n            case 9:\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              return _context.abrupt(\"return\", {\n                error: true\n              });\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[0, 11]], Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.texto,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 18\n        }\n      }, \"Bienvenido a Consulta de API Medicamentos \"), React.createElement(Button, {\n        onPress: function onPress() {\n          return _this._signInWithGoogle();\n        },\n        title: \"Iniciar sesi\\xF3n con Google\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return LoginScreen;\n}(Component);\n\nexport { LoginScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  texto: {\n    fontSize: 20\n  }\n});","map":{"version":3,"sources":["/DATOS/Escritorio/APPs/TERMINADO/app-ReactNative-NavigationyLogin--MED/Screens/LoginScreen.js"],"names":["React","Component","Google","LoginScreen","logInAsync","androidClientId","scopes","result","type","props","onLogin","error","console","log","cancelled","styles","container","texto","_signInWithGoogle","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","fontSize"],"mappings":";;;;;;;;;;;;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;;AAGA,OAAO,KAAKC,MAAZ,MAAwB,sBAAxB;;IAEqBC,W;;;;;;;;;;;;;;;;;;;;;+CAMYD,MAAM,CAACE,UAAP,CAAkB;AACnCC,gBAAAA,eAAe,EAAE,yEADkB;AAEnCC,gBAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,OAAZ;AAF2B,eAAlB,C;;;AAAfC,cAAAA,M;;oBAKFA,MAAM,CAACC,IAAP,KAAgB,S;;;;;AAChB,kBAAI;AACA,qBAAKC,KAAL,CAAWC,OAAX;AACH,eAFD,CAEE,OAAOC,KAAP,EAAa;AACXC,gBAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwBF,KAApC;AACH;;;;;;+CAEM;AAAEG,gBAAAA,SAAS,EAAE;AAAb,e;;;;;;;;;+CAIJ;AAAEH,gBAAAA,KAAK,EAAE;AAAT,e;;;;;;;;;;;6BAKP;AAAA;;AACJ,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEI,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDADL,EAEI,oBAAC,MAAD;AACI,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACC,iBAAL,EAAN;AAAA,SADb;AAEI,QAAA,KAAK,EAAC,8BAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AASH;;;;EArCoCjB,S;;SAApBE,W;AAyCrB,IAAMY,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC7BJ,EAAAA,SAAS,EAAE;AACPK,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAE,MAFV;AAGPC,IAAAA,UAAU,EAAE,QAHL;AAIPC,IAAAA,cAAc,EAAE;AAJT,GADkB;AAO7BP,EAAAA,KAAK,EAAE;AACHQ,IAAAA,QAAQ,EAAE;AADP;AAPsB,CAAlB,CAAf","sourcesContent":["\nimport React, {Component} from 'react';\nimport {StyleSheet, Text, View, Button} from 'react-native';\n\nimport * as Google from 'expo-google-app-auth'\n\nexport default class LoginScreen extends Component{\n\n    // Acuerdense de poner su key de Google Console\n    async _signInWithGoogle(){\n\n        try {\n            const result = await Google.logInAsync({\n                androidClientId: \"95338186220-pd2rvqfke9ubgevvm3bb8s8jfe89jp4d.apps.googleusercontent.com\",\n                scopes: ['profile', 'email'],\n            });\n    \n            if (result.type === 'success') {\n                try {\n                    this.props.onLogin();\n                } catch (error){\n                    console.log(\"Something happened \" + error);\n                }\n            } else {\n                return { cancelled: true };\n            }\n\n        } catch (e) {\n            return { error: true };\n        }\n\n    }\n\n    render(){\n        return (\n            <View style={styles.container}>\n                 <Text style={styles.texto}>Bienvenido a Consulta de API Medicamentos </Text>\n                <Button\n                    onPress={() => this._signInWithGoogle()}\n                    title=\"Iniciar sesiÃ³n con Google\"\n                />\n            </View>\n        );\n    }\n\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    texto: {\n        fontSize: 20,\n      }\n});\n\n"]},"metadata":{},"sourceType":"module"}