{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Videos\\\\Proyectos hechos\\\\1C2021 - AppSupermercado - Ferrario_Matias-20230303T213100Z-001\\\\1C2021 - AppSupermercado - Ferrario_Matias\\\\Codigo\\\\AppMobile\\\\node_modules\\\\react-native-elements\\\\src\\\\tooltip\\\\Tooltip.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport { withTheme } from \"../config\";\nimport { ScreenWidth, ScreenHeight, isIOS } from \"../helpers\";\nimport Triangle from \"./Triangle\";\nimport getTooltipCoordinate, { getElementVisibleWidth } from \"./getTooltipCoordinate\";\nvar Tooltip = function (_React$PureComponent) {\n  _inherits(Tooltip, _React$PureComponent);\n  var _super = _createSuper(Tooltip);\n  function Tooltip() {\n    var _this;\n    _classCallCheck(this, Tooltip);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isVisible: false,\n      yOffset: 0,\n      xOffset: 0,\n      elementWidth: 0,\n      elementHeight: 0\n    };\n    _this.toggleTooltip = function () {\n      var onClose = _this.props.onClose;\n      _this.getElementPosition();\n      _this.setState(function (prevState) {\n        if (prevState.isVisible) {\n          onClose && onClose();\n        }\n        return {\n          isVisible: !prevState.isVisible\n        };\n      });\n    };\n    _this.wrapWithPress = function (toggleOnPress, toggleAction, children) {\n      if (toggleOnPress) {\n        return React.createElement(TouchableOpacity, _extends({}, _defineProperty({}, toggleAction, _this.toggleTooltip), {\n          delayLongPress: 250,\n          activeOpacity: 1,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 9\n          }\n        }), children);\n      }\n      return children;\n    };\n    _this.getTooltipStyle = function () {\n      var _objectSpread2;\n      var _this$state = _this.state,\n        yOffset = _this$state.yOffset,\n        xOffset = _this$state.xOffset,\n        elementHeight = _this$state.elementHeight,\n        elementWidth = _this$state.elementWidth;\n      var _this$props = _this.props,\n        height = _this$props.height,\n        backgroundColor = _this$props.backgroundColor,\n        width = _this$props.width,\n        withPointer = _this$props.withPointer,\n        containerStyle = _this$props.containerStyle;\n      var _getTooltipCoordinate = getTooltipCoordinate(xOffset, yOffset, elementWidth, elementHeight, ScreenWidth, ScreenHeight, width, height, withPointer),\n        x = _getTooltipCoordinate.x,\n        y = _getTooltipCoordinate.y;\n      return _objectSpread((_objectSpread2 = {\n        position: 'absolute'\n      }, _defineProperty(_objectSpread2, I18nManager.isRTL ? 'right' : 'left', x), _defineProperty(_objectSpread2, \"top\", y), _defineProperty(_objectSpread2, \"width\", width), _defineProperty(_objectSpread2, \"height\", height), _defineProperty(_objectSpread2, \"backgroundColor\", backgroundColor), _defineProperty(_objectSpread2, \"display\", 'flex'), _defineProperty(_objectSpread2, \"alignItems\", 'center'), _defineProperty(_objectSpread2, \"justifyContent\", 'center'), _defineProperty(_objectSpread2, \"flex\", 1), _defineProperty(_objectSpread2, \"borderRadius\", 10), _defineProperty(_objectSpread2, \"padding\", 10), _objectSpread2), containerStyle);\n    };\n    _this.renderPointer = function (tooltipY) {\n      var _this$state2 = _this.state,\n        yOffset = _this$state2.yOffset,\n        xOffset = _this$state2.xOffset,\n        elementHeight = _this$state2.elementHeight,\n        elementWidth = _this$state2.elementWidth;\n      var _this$props2 = _this.props,\n        backgroundColor = _this$props2.backgroundColor,\n        pointerColor = _this$props2.pointerColor;\n      var pastMiddleLine = yOffset > tooltipY;\n      return React.createElement(View, {\n        style: _defineProperty({\n          position: 'absolute',\n          top: pastMiddleLine ? yOffset - 13 : yOffset + elementHeight - 2\n        }, I18nManager.isRTL ? 'right' : 'left', xOffset + getElementVisibleWidth(elementWidth, xOffset, ScreenWidth) / 2 - 7.5),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 7\n        }\n      }, React.createElement(Triangle, {\n        style: {\n          borderBottomColor: pointerColor || backgroundColor\n        },\n        isDown: pastMiddleLine,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }\n      }));\n    };\n    _this.getTooltipHighlightedButtonStyle = function () {\n      var _ref3;\n      var highlightColor = _this.props.highlightColor;\n      var _this$state3 = _this.state,\n        yOffset = _this$state3.yOffset,\n        xOffset = _this$state3.xOffset,\n        elementWidth = _this$state3.elementWidth,\n        elementHeight = _this$state3.elementHeight;\n      return _ref3 = {\n        position: 'absolute',\n        top: yOffset\n      }, _defineProperty(_ref3, I18nManager.isRTL ? 'right' : 'left', xOffset), _defineProperty(_ref3, \"backgroundColor\", highlightColor), _defineProperty(_ref3, \"overflow\", 'visible'), _defineProperty(_ref3, \"width\", elementWidth), _defineProperty(_ref3, \"height\", elementHeight), _ref3;\n    };\n    _this.renderTouchableHighlightedButton = function () {\n      var TooltipHighlightedButtonStyle = _this.getTooltipHighlightedButtonStyle();\n      return React.createElement(TouchableOpacity, {\n        testID: \"tooltipTouchableHighlightedButton\",\n        onPress: function onPress() {\n          return _this.toggleTooltip();\n        },\n        style: TooltipHighlightedButtonStyle,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 7\n        }\n      }, _this.props.children);\n    };\n    _this.renderStaticHighlightedButton = function () {\n      var TooltipHighlightedButtonStyle = _this.getTooltipHighlightedButtonStyle();\n      return React.createElement(View, {\n        style: TooltipHighlightedButtonStyle,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 7\n        }\n      }, _this.props.children);\n    };\n    _this.renderHighlightedButton = function () {\n      var closeOnlyOnBackdropPress = _this.props.closeOnlyOnBackdropPress;\n      if (closeOnlyOnBackdropPress) {\n        return _this.renderTouchableHighlightedButton();\n      } else {\n        return _this.renderStaticHighlightedButton();\n      }\n    };\n    _this.renderContent = function (withTooltip) {\n      var _this$props3 = _this.props,\n        popover = _this$props3.popover,\n        withPointer = _this$props3.withPointer,\n        toggleOnPress = _this$props3.toggleOnPress,\n        toggleAction = _this$props3.toggleAction;\n      if (!withTooltip) {\n        return _this.wrapWithPress(toggleOnPress, toggleAction, _this.props.children);\n      }\n      var tooltipStyle = _this.getTooltipStyle();\n      return React.createElement(View, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 7\n        }\n      }, _this.renderHighlightedButton(), withPointer && _this.renderPointer(tooltipStyle.top), React.createElement(View, {\n        style: tooltipStyle,\n        testID: \"tooltipPopoverContainer\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 9\n        }\n      }, popover));\n    };\n    _this.getElementPosition = function () {\n      var skipAndroidStatusBar = _this.props.skipAndroidStatusBar;\n      _this.renderedElement && _this.renderedElement.measure(function (frameOffsetX, frameOffsetY, width, height, pageOffsetX, pageOffsetY) {\n        _this.setState({\n          xOffset: pageOffsetX,\n          yOffset: isIOS || skipAndroidStatusBar ? pageOffsetY : pageOffsetY - StatusBar.currentHeight,\n          elementWidth: width,\n          elementHeight: height\n        });\n      });\n    };\n    _this.renderStaticModalContent = function () {\n      var _this$props4 = _this.props,\n        withOverlay = _this$props4.withOverlay,\n        overlayColor = _this$props4.overlayColor;\n      return React.createElement(Fragment, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.container(withOverlay, overlayColor),\n        onPress: _this.toggleTooltip,\n        activeOpacity: 1,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.closeOnlyOnBackdropPressViewWrapper,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 9\n        }\n      }, _this.renderContent(true)));\n    };\n    _this.renderTogglingModalContent = function () {\n      var _this$props5 = _this.props,\n        withOverlay = _this$props5.withOverlay,\n        overlayColor = _this$props5.overlayColor;\n      return React.createElement(TouchableOpacity, {\n        style: styles.container(withOverlay, overlayColor),\n        onPress: _this.toggleTooltip,\n        activeOpacity: 1,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 7\n        }\n      }, _this.renderContent(true));\n    };\n    _this.renderModalContent = function () {\n      var closeOnlyOnBackdropPress = _this.props.closeOnlyOnBackdropPress;\n      if (closeOnlyOnBackdropPress) {\n        return _this.renderStaticModalContent();\n      } else {\n        return _this.renderTogglingModalContent();\n      }\n    };\n    return _this;\n  }\n  _createClass(Tooltip, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      requestAnimationFrame(this.getElementPosition);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var isVisible = this.state.isVisible;\n      var _this$props6 = this.props,\n        onClose = _this$props6.onClose,\n        onOpen = _this$props6.onOpen,\n        ModalComponent = _this$props6.ModalComponent;\n      return React.createElement(View, {\n        collapsable: false,\n        ref: function ref(e) {\n          _this2.renderedElement = e;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 7\n        }\n      }, this.renderContent(false), React.createElement(ModalComponent, {\n        animationType: \"fade\",\n        visible: isVisible,\n        transparent: true,\n        onDismiss: onClose,\n        onShow: onOpen,\n        onRequestClose: onClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 9\n        }\n      }, this.renderModalContent()));\n    }\n  }]);\n  return Tooltip;\n}(React.PureComponent);\nTooltip.propTypes = {\n  children: PropTypes.element,\n  withPointer: PropTypes.bool,\n  popover: PropTypes.element,\n  toggleOnPress: PropTypes.bool,\n  toggleAction: PropTypes.oneOf(['onPress', 'onLongPress']),\n  height: PropTypes.number,\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  pointerColor: PropTypes.string,\n  onClose: PropTypes.func,\n  onOpen: PropTypes.func,\n  overlayColor: PropTypes.string,\n  withOverlay: PropTypes.bool,\n  backgroundColor: PropTypes.string,\n  highlightColor: PropTypes.string,\n  skipAndroidStatusBar: PropTypes.bool,\n  ModalComponent: PropTypes.elementType,\n  closeOnlyOnBackdropPress: PropTypes.bool\n};\nTooltip.defaultProps = {\n  withOverlay: true,\n  overlayColor: 'rgba(250, 250, 250, 0.70)',\n  highlightColor: 'transparent',\n  withPointer: true,\n  toggleOnPress: true,\n  toggleAction: 'onPress',\n  height: 40,\n  width: 150,\n  containerStyle: {},\n  backgroundColor: '#617080',\n  onClose: function onClose() {},\n  onOpen: function onOpen() {},\n  skipAndroidStatusBar: false,\n  ModalComponent: Modal,\n  closeOnlyOnBackdropPress: false\n};\nvar styles = {\n  container: function container(withOverlay, overlayColor) {\n    return {\n      backgroundColor: withOverlay ? overlayColor : 'transparent',\n      flex: 1\n    };\n  },\n  closeOnlyOnBackdropPressViewWrapper: {\n    position: 'absolute'\n  }\n};\nexport { Tooltip };\nexport default withTheme(Tooltip, 'Tooltip');","map":{"version":3,"names":["React","Fragment","PropTypes","TouchableOpacity","Modal","View","StatusBar","I18nManager","withTheme","ScreenWidth","ScreenHeight","isIOS","Triangle","getTooltipCoordinate","getElementVisibleWidth","Tooltip","_React$PureComponent","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","isVisible","yOffset","xOffset","elementWidth","elementHeight","toggleTooltip","onClose","props","getElementPosition","setState","prevState","wrapWithPress","toggleOnPress","toggleAction","children","createElement","_extends","_defineProperty","delayLongPress","activeOpacity","__self","_assertThisInitialized","__source","fileName","_jsxFileName","lineNumber","columnNumber","getTooltipStyle","_objectSpread2","_this$state","_this$props","height","backgroundColor","width","withPointer","containerStyle","_getTooltipCoordinate","x","y","_objectSpread","position","isRTL","renderPointer","tooltipY","_this$state2","_this$props2","pointerColor","pastMiddleLine","style","top","borderBottomColor","isDown","getTooltipHighlightedButtonStyle","_ref3","highlightColor","_this$state3","renderTouchableHighlightedButton","TooltipHighlightedButtonStyle","testID","onPress","renderStaticHighlightedButton","renderHighlightedButton","closeOnlyOnBackdropPress","renderContent","withTooltip","_this$props3","popover","tooltipStyle","skipAndroidStatusBar","renderedElement","measure","frameOffsetX","frameOffsetY","pageOffsetX","pageOffsetY","currentHeight","renderStaticModalContent","_this$props4","withOverlay","overlayColor","styles","container","closeOnlyOnBackdropPressViewWrapper","renderTogglingModalContent","_this$props5","renderModalContent","_createClass","key","value","componentDidMount","requestAnimationFrame","render","_this2","_this$props6","onOpen","ModalComponent","collapsable","ref","e","animationType","visible","transparent","onDismiss","onShow","onRequestClose","PureComponent","propTypes","element","bool","oneOf","number","oneOfType","string","object","array","func","elementType","defaultProps","flex"],"sources":["D:/Videos/Proyectos hechos/1C2021 - AppSupermercado - Ferrario_Matias-20230303T213100Z-001/1C2021 - AppSupermercado - Ferrario_Matias/Codigo/AppMobile/node_modules/react-native-elements/src/tooltip/Tooltip.js"],"sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  TouchableOpacity,\n  Modal,\n  View,\n  StatusBar,\n  I18nManager,\n} from 'react-native';\n\nimport { withTheme } from '../config';\nimport { ScreenWidth, ScreenHeight, isIOS } from '../helpers';\n\nimport Triangle from './Triangle';\nimport getTooltipCoordinate, {\n  getElementVisibleWidth,\n} from './getTooltipCoordinate';\n\nclass Tooltip extends React.PureComponent {\n  state = {\n    isVisible: false,\n    yOffset: 0,\n    xOffset: 0,\n    elementWidth: 0,\n    elementHeight: 0,\n  };\n\n  renderedElement;\n\n  toggleTooltip = () => {\n    const { onClose } = this.props;\n    this.getElementPosition();\n    this.setState((prevState) => {\n      if (prevState.isVisible) {\n        onClose && onClose();\n      }\n\n      return { isVisible: !prevState.isVisible };\n    });\n  };\n\n  wrapWithPress = (toggleOnPress, toggleAction, children) => {\n    if (toggleOnPress) {\n      return (\n        <TouchableOpacity\n          {...{ [toggleAction]: this.toggleTooltip }}\n          delayLongPress={250}\n          activeOpacity={1}\n        >\n          {children}\n        </TouchableOpacity>\n      );\n    }\n\n    return children;\n  };\n\n  getTooltipStyle = () => {\n    const { yOffset, xOffset, elementHeight, elementWidth } = this.state;\n    const {\n      height,\n      backgroundColor,\n      width,\n      withPointer,\n      containerStyle,\n    } = this.props;\n\n    const { x, y } = getTooltipCoordinate(\n      xOffset,\n      yOffset,\n      elementWidth,\n      elementHeight,\n      ScreenWidth,\n      ScreenHeight,\n      width,\n      height,\n      withPointer\n    );\n\n    return {\n      position: 'absolute',\n      [I18nManager.isRTL ? 'right' : 'left']: x,\n      top: y,\n      width,\n      height,\n      backgroundColor,\n      // default styles\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flex: 1,\n      borderRadius: 10,\n      padding: 10,\n      ...containerStyle,\n    };\n  };\n\n  renderPointer = (tooltipY) => {\n    const { yOffset, xOffset, elementHeight, elementWidth } = this.state;\n    const { backgroundColor, pointerColor } = this.props;\n    const pastMiddleLine = yOffset > tooltipY;\n\n    return (\n      <View\n        style={{\n          position: 'absolute',\n          top: pastMiddleLine ? yOffset - 13 : yOffset + elementHeight - 2,\n          [I18nManager.isRTL ? 'right' : 'left']:\n            xOffset +\n            getElementVisibleWidth(elementWidth, xOffset, ScreenWidth) / 2 -\n            7.5,\n        }}\n      >\n        <Triangle\n          style={{ borderBottomColor: pointerColor || backgroundColor }}\n          isDown={pastMiddleLine}\n        />\n      </View>\n    );\n  };\n  getTooltipHighlightedButtonStyle = () => {\n    const { highlightColor } = this.props;\n    const { yOffset, xOffset, elementWidth, elementHeight } = this.state;\n    return {\n      position: 'absolute',\n      top: yOffset,\n      [I18nManager.isRTL ? 'right' : 'left']: xOffset,\n      backgroundColor: highlightColor,\n      overflow: 'visible',\n      width: elementWidth,\n      height: elementHeight,\n    };\n  };\n  renderTouchableHighlightedButton = () => {\n    const TooltipHighlightedButtonStyle = this.getTooltipHighlightedButtonStyle();\n    return (\n      <TouchableOpacity\n        testID=\"tooltipTouchableHighlightedButton\"\n        onPress={() => this.toggleTooltip()}\n        style={TooltipHighlightedButtonStyle}\n      >\n        {this.props.children}\n      </TouchableOpacity>\n    );\n  };\n  renderStaticHighlightedButton = () => {\n    const TooltipHighlightedButtonStyle = this.getTooltipHighlightedButtonStyle();\n    return (\n      <View style={TooltipHighlightedButtonStyle}>{this.props.children}</View>\n    );\n  };\n\n  renderHighlightedButton = () => {\n    const { closeOnlyOnBackdropPress } = this.props;\n    if (closeOnlyOnBackdropPress) {\n      return this.renderTouchableHighlightedButton();\n    } else {\n      return this.renderStaticHighlightedButton();\n    }\n  };\n\n  renderContent = (withTooltip) => {\n    const { popover, withPointer, toggleOnPress, toggleAction } = this.props;\n\n    if (!withTooltip) {\n      return this.wrapWithPress(\n        toggleOnPress,\n        toggleAction,\n        this.props.children\n      );\n    }\n\n    const tooltipStyle = this.getTooltipStyle();\n    return (\n      <View>\n        {this.renderHighlightedButton()}\n        {withPointer && this.renderPointer(tooltipStyle.top)}\n        <View style={tooltipStyle} testID=\"tooltipPopoverContainer\">\n          {popover}\n        </View>\n      </View>\n    );\n  };\n\n  componentDidMount() {\n    // wait to compute onLayout values.\n    requestAnimationFrame(this.getElementPosition);\n  }\n\n  getElementPosition = () => {\n    const { skipAndroidStatusBar } = this.props;\n    this.renderedElement &&\n      this.renderedElement.measure(\n        (\n          frameOffsetX,\n          frameOffsetY,\n          width,\n          height,\n          pageOffsetX,\n          pageOffsetY\n        ) => {\n          this.setState({\n            xOffset: pageOffsetX,\n            yOffset:\n              isIOS || skipAndroidStatusBar\n                ? pageOffsetY\n                : pageOffsetY - StatusBar.currentHeight,\n            elementWidth: width,\n            elementHeight: height,\n          });\n        }\n      );\n  };\n\n  renderStaticModalContent = () => {\n    const { withOverlay, overlayColor } = this.props;\n\n    return (\n      <Fragment>\n        <TouchableOpacity\n          style={styles.container(withOverlay, overlayColor)}\n          onPress={this.toggleTooltip}\n          activeOpacity={1}\n        />\n        <View style={styles.closeOnlyOnBackdropPressViewWrapper}>\n          {this.renderContent(true)}\n        </View>\n      </Fragment>\n    );\n  };\n  renderTogglingModalContent = () => {\n    const { withOverlay, overlayColor } = this.props;\n\n    return (\n      <TouchableOpacity\n        style={styles.container(withOverlay, overlayColor)}\n        onPress={this.toggleTooltip}\n        activeOpacity={1}\n      >\n        {this.renderContent(true)}\n      </TouchableOpacity>\n    );\n  };\n\n  renderModalContent = () => {\n    const { closeOnlyOnBackdropPress } = this.props;\n    if (closeOnlyOnBackdropPress) {\n      return this.renderStaticModalContent();\n    } else {\n      return this.renderTogglingModalContent();\n    }\n  };\n\n  render() {\n    const { isVisible } = this.state;\n    const { onClose, onOpen, ModalComponent } = this.props;\n\n    return (\n      <View\n        collapsable={false}\n        ref={(e) => {\n          this.renderedElement = e;\n        }}\n      >\n        {this.renderContent(false)}\n        <ModalComponent\n          animationType=\"fade\"\n          visible={isVisible}\n          transparent\n          onDismiss={onClose}\n          onShow={onOpen}\n          onRequestClose={onClose}\n        >\n          {this.renderModalContent()}\n        </ModalComponent>\n      </View>\n    );\n  }\n}\n\nTooltip.propTypes = {\n  children: PropTypes.element,\n  withPointer: PropTypes.bool,\n  popover: PropTypes.element,\n  toggleOnPress: PropTypes.bool,\n  toggleAction: PropTypes.oneOf(['onPress', 'onLongPress']),\n  height: PropTypes.number,\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  pointerColor: PropTypes.string,\n  onClose: PropTypes.func,\n  onOpen: PropTypes.func,\n  overlayColor: PropTypes.string,\n  withOverlay: PropTypes.bool,\n  backgroundColor: PropTypes.string,\n  highlightColor: PropTypes.string,\n  skipAndroidStatusBar: PropTypes.bool,\n  ModalComponent: PropTypes.elementType,\n  closeOnlyOnBackdropPress: PropTypes.bool,\n};\n\nTooltip.defaultProps = {\n  withOverlay: true,\n  overlayColor: 'rgba(250, 250, 250, 0.70)',\n  highlightColor: 'transparent',\n  withPointer: true,\n  toggleOnPress: true,\n  toggleAction: 'onPress',\n  height: 40,\n  width: 150,\n  containerStyle: {},\n  backgroundColor: '#617080',\n  onClose: () => {},\n  onOpen: () => {},\n  skipAndroidStatusBar: false,\n  ModalComponent: Modal,\n  closeOnlyOnBackdropPress: false,\n};\n\nconst styles = {\n  container: (withOverlay, overlayColor) => ({\n    backgroundColor: withOverlay ? overlayColor : 'transparent',\n    flex: 1,\n  }),\n  closeOnlyOnBackdropPressViewWrapper: {\n    position: 'absolute',\n  },\n};\n\nexport { Tooltip };\nexport default withTheme(Tooltip, 'Tooltip');\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}